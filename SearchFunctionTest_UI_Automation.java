// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class SearchFunctionTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void searchFunction() {
    // Test name: searchFunction
    // Step # | name | target | value
    // 1 | open | https://www.service.nsw.gov.au/ | 
    driver.get("https://www.service.nsw.gov.au/");
    //   | setWindowSize | 1382x754 | 
    driver.manage().window().setSize(new Dimension(1382, 754));
    //   | click | css=.focus-visible | 
    driver.findElement(By.cssSelector(".focus-visible")).click();
    // 2 | type | css=.focus-visible | apply for a number plate
    driver.findElement(By.cssSelector(".focus-visible")).sendKeys("apply for a number plate");
    //   | click | css=.personalised-variant:nth-child(1) path | 
    driver.findElement(By.cssSelector(".personalised-variant:nth-child(1) path")).click();
    //   | click | linkText=Apply to collect number plates from another service centre | 
    driver.findElement(By.linkText("Apply to collect number plates from another service centre")).click();
    // 3 | click | linkText=Find a service centre | 
    driver.findElement(By.linkText("Find a service centre")).click();


    // 4 | click | id=locatorTextSearch | 
    driver.findElement(By.id("locatorTextSearch")).click();
    //   | type | id=locatorTextSearch | sydney 2000
    driver.findElement(By.id("locatorTextSearch")).sendKeys("sydney 2000");
    //   | click | css=.button--primary path | 
    driver.findElement(By.cssSelector(".button--primary path")).click();
    //   | mouseOver | css=.button--primary | 
    {
      WebElement element = driver.findElement(By.cssSelector(".button--primary"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    //   | click | css=.location:nth-child(1) | 
    driver.findElement(By.cssSelector(".location:nth-child(1)")).click();
    // 5 | click | linkText=Wynyard Service Centre | 
    driver.findElement(By.linkText("Wynyard Service Centre")).click();
    //   | click | css=.page-wrapper | 
    driver.findElement(By.cssSelector(".page-wrapper")).click();
    //   | click | css=.field-field-store-address p | 
    driver.findElement(By.cssSelector(".field-field-store-address p")).click();


    // test data driven
    String output = driver.findElement(By.name("q")).getAttribute("locatorTextSearch").element.getText();
    if(text.contain(output))
    {
            System.out.println("Search is passed");
    }
    else {
            System.out.println("Search is failed");
    }

  }
}
